<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.helper.dao.BoardDAO">

	<!-- 공통 로그인 회원정보 가져오기 -->
	<select id="memberIdPwdCheck"
		resultType="com.spring.helper.vo.BoardVO.UserVO">
		select memberNumber,memberEmail,memberId,memberCountry from
		users where memberNumber=10010
	</select>

	<!-- 동욱이 시작 -->
	<!-- 지식인 게시판 갯수 구하기 -->
	<select id="knowledgeGetArticleCnt" resultType="int">
		select count(*) from knowledge
	</select>
	<!-- 지식인 게시판 리스트 출력 -->
	<select id="knowledgeGetArticleList"
		parameterType="java.util.Map"
		resultType="com.spring.helper.vo.BoardVO.KnowledgeVO">
	<![CDATA[
	SELECT *  
	FROM(SELECT knowledgeNumber, memberNumber, boardCode, memberEmail, memberId, knowledgeSubject, 
		 		knowledgeContent, knowledgeOpenCheck, knowledgeReward, knowledgeCategory, knowledgeLookup,
		 		knowledgeRegdate,knowledgeReply,knowledgeTemp1,knowledgeTemp2,knowledgeTemp3, rownum rNum  
		 FROM ( 
			 	SELECT * 
			 	FROM knowledge
			 	ORDER BY knowledgeRegdate DESC
			  )
		 )  
	WHERE rNum >= #{start} AND rNum <= #{end}
	]]>
	</select>
	<!-- 질문등록 처리 -->
	<insert id="knowledgeInsertArticle"
		parameterType="com.spring.helper.vo.BoardVO.KnowledgeVO">
		INSERT INTO knowledge
		VALUES(knowledgeseq.nextval,'10005','10','park@gmail.com','park',#{knowledgeSubject},#{knowledgeContent},#{knowledgeOpenCheck},#{knowledgeReward},#{knowledgeCategory},0,sysdate,'0','0','0',0)
	</insert>
	<!-- 지식인게시판 게시글 상세페이지 출력 -->
	<select id="knowledgeGetArticle"
		resultType="com.spring.helper.vo.BoardVO.KnowledgeVO">
		SELECT * FROM knowledge WHERE knowledgeNumber=#{knowledgeNumber}
	</select>
	<!-- 답변등록 처리 -->
	<insert id="knowledgeCommentPro" parameterType="java.util.Map">
		INSERT INTO kComment
		VALUES(knowledgeseq.nextval,#{knowledgeNumber},'10','park@gmail.com','park',#{kCommentContent},'N',sysdate,#{kCommentTemp1},'N',0)
	</insert>
	<!-- 댓글 리스트 출력 -->
	<select id="knowledgeCommentList" resultType="com.spring.helper.vo.BoardVO.kCommentVO">
		SELECT * FROM kComment WHERE knowledgeNumber=#{knowledgeNumber} 
	</select>
	<!-- 동욱이 종료 -->




	<!-- 재영 시작 -->
	<insert id='realestateWritePro' parameterType="com.spring.helper.vo.BoardVO.RealestateVO">
		insert into realestate(realestateNumber,memberNumber,boardCode,memberEmail,memberId,realestateSubject,
		realestateContent,realestatePrice,realestateCategory1,realestateCategory2,realestateDeposit,realestateDepositCheck,
		realestateManagement,realestateOptionCheck,realestateTobaccoCheck,realestateState,realestateHeatingtype,realestateBalcony,
		realestatePetCheck,realestateTerm,realestateMoveindate,realestateGender,realestateRoom,realestateToilet,realestateCar,
		realestateSize,realestateType,realestateLocation,realestateFavorite,realestateRecommend,realestateLookup,realestateRegdate,
		realestateCheckday,realestateImg1,realestateImg2,realestateImg3,realestateTemp1) values
		(realestateseq.nextVal,#{memberNumber},20,#{memberEmail},#{memberId},#{realestateSubject},
		#{realestateContent},#{realestatePrice},#{realestateCategory1},'empty',#{realestateDeposit},#{realestateDepositCheck},
		#{realestateManagement},#{realestateOptionCheck},#{realestateTobaccoCheck},#{realestateState},#{realestateHeatingtype},#{realestateBalcony},
		#{realestatePetCheck},#{realestateTerm},#{realestateMoveindate},#{realestateGender},#{realestateRoom},#{realestateToilet},#{realestateCar},
		#{realestateSize},#{realestateType},#{realestateLocation},'empty',0,0,sysdate,
		'empty',#{realestateImg1},#{realestateImg2,jdbcType=VARCHAR},#{realestateImg3,jdbcType=VARCHAR},#{realestateTemp1})
	</insert>
	
	<sql id="getRealCount">
		select count(*) from realestate
	</sql>
	
	<select id="getRealestateCount" parameterType="com.spring.helper.vo.BoardVO.RealestateVO" resultType="Integer">
	<include refid="getRealCount"/>
		<where>
			<if test="realestateCategory1 != null"> <!--지역 -->
				realestateCategory1 in #{realestateCategory1}
			</if>
			<if test="realestatePrice != 0"> <!-- 금액 범위  -->
			<![CDATA[
				and realestatePrice < #{realestatePrice}
			]]>
			</if>
			<if test="realestatePriceEnd != 0"> <!-- 금액 끝 범위  -->
			<![CDATA[
				and realestatePrice > #{realestatePriceEnd}
			]]>
			</if>
			<if test="realestateDepositCheck != null"> <!-- 보증금 -->
				and realestateDepositCheck in #{realestateDepositCheck}
			</if>
			<if test="realestateRoom != null"> <!-- 방갯수 -->
				and realestateRoom in #{realestateRoom}
			</if>
			<if test="realestateToilet != null"> <!-- 화장실 갯수 -->
				and realestateToilet in #{realestateToilet}
			</if>
			<if test="realestateType != null"> <!-- 방형태 -->
				and realestateType in #{realestateType}
			</if>
			<if test="realestateTerm != null"> <!-- 계약기간 -->
				and realestateTerm in #{realestateTerm}
			</if>
			<if test="realestateGender != null"> <!-- 성별 -->
				and realestateGender in #{realestateGender}
			</if>
			<if test="realestateSize != null"> <!-- 방크기 -->
				and realestateSize in #{realestateSize}
			</if>
			<if test="realestateOptionCheck != null"> <!-- 풀옵션 -->
				and realestateOptionCheck in #{realestateOptionCheck}
			</if>
			<if test="realestateTobaccoCheck != null"> <!-- 담배 -->
				and realestateTobaccoCheck in #{realestateTobaccoCheck}
			</if>
			<if test="realestatePetCheck != null"> <!-- 펫 -->
				and realestatePetCheck in #{realestatePetCheck}
			</if>
			<if test="realestateBalcony != null"> <!-- 성별 -->
				and realestateBalcony in #{realestateBalcony}
			</if>
			<if test="realestateCar != null"> <!-- 주차장 -->
				and realestateCar in #{realestateCar}
			</if>
			<if test="realestateTemp1 != null"> <!-- 엘리베이터 -->
				and realestateTemp1 in #{realestateTemp1}
			</if>
		</where>
	</select>

	<!-- 재영 끝 -->

	<!-- 민석이 시작 -->
	<!-- 멧세지 알람과 댓글 알람의 총합(멧세지 알람 + 댓글 알람) -->
	<select id="messageReadCnt1" resultType="int">
		select count(*) cnt from  commentalarm where memberid = 'min'
	</select>		
	
	<select id="messageReadCnt2" resultType="int">
		select count(*) cnt from  messagealarm where memberid = 'min'
	</select>
	
	<!-- 멧세지 알람의 리스트 -->
	<select id="messageReadList" resultType="com.spring.helper.vo.BoardVO.MessageAlarmVO" parameterType="java.util.Map">
		<![CDATA[
			SELECT * FROM (SELECT messagenumber, membernumber, boardcode, memberemail, memberid, membercountry, messagesubject, messagecontent, messagealarm, messageregdate, rownum rNum 
			FROM ( SELECT * FROM messagealarm ORDER BY messageregdate DESC ))
			WHERE rNum >= #{start} AND rNum <= #{end}
		]]>
	</select>
	
	<!-- 댓글 알람의 리스트 -->
	<select id="commentReadList" resultType="com.spring.helper.vo.BoardVO.CommentAlarmVO" parameterType="java.util.Map">
		<![CDATA[
				SELECT * FROM (SELECT commentnumber, membernumber, boardcode, memberemail, memberid, membercountry, commentoriginalnumber, commentcommentnumber, commentsubject, commentalarm, commentregdate, rownum rNum 
				FROM ( SELECT * FROM commentalarm ORDER BY commentregdate DESC ))
				WHERE rNum >= #{start} AND rNum <= #{end}
		]]>
	</select>

	<!-- 민석이 종료 -->


</mapper>